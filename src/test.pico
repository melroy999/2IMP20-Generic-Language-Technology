begin
	declare
		n1 : natural, n2 : natural, b1 : boolean, b2 : boolean;
		
		%% Different syntactical applications of logical operators.
		%% Here, b1 and b2 should be semantically equal, with b2 being an unambiguous notation of b1. 
		b1 := true and false or true;
		b2 := (true and false) or true;
		
		b1 := true or false and true or false;
		b2 := (true or (false and true)) or false;
		
		b1 := (false and true) and true == true;
		b2 := (false and true) and (true == true);
		
		b1 := n1 == 10 and n2 != 100;
		b2 := (n1 == 10) and (n2 != 100);
		
		b1 := n1 == 10 or n2 != 100 or (n2 + n1 != 150 - 20);
		b2 := ((n1 == 10) or (n2 != 100)) or ((n2 + n1) != (150 - 20));
		
		b1 := n1 == 10 and false or n2 != 100;
		b2 := ((n1 == 10) and false) or (n2 != 100);
		
		b1 := n1 == 10 and b1 and b2 or n2 != 100;
		b2 := (((n1 == 10) and b1) and b2) or (n2 != 100);
		
		b1 := (n1 == 10 or b1) and b2 == false or n2 != 100;
		b2 := (((n1 == 10) or b1) and (b2 == false)) or (n2 != 100);
		
		b1 := not (n1 == 10) and not false or n2 != 100;
		b2 := ((not (n1 == 10)) and (not false)) or (n2 != 100);
		
		%% Different syntactical applications of logical operators used as guards of if statements.
		%% Here, b1 and b2 should be semantically equal, with b2 being an unambiguous notation of b1. 
		if b1 and b2 or false then else fi;
		if ((b1 and b2) or false) then else fi;
		
		if not (n1 == 10) and not false or n2 != 100 then else fi;
		if (((not (n1 == 10)) and (not false)) or (n2 != 100)) then else fi;
		
		%% Different syntactical applications of logical operators used as guards of while loops.
		%% Here, b1 and b2 should be semantically equal, with b2 being an unambiguous notation of b1. 
		while b1 and b2 or false do od;
		while ((b1 and b2) or false) do od;
		
		while not (n1 == 10) and not false or n2 != 100 do od;
		while (((not (n1 == 10)) and (not false)) or (n2 != 100)) do od;
		
		%% Different syntactical applications of for loops.
		for n1 := 0; n1 != n2; n1 := n1 + 1 do od;
		for n1 := n2 - 10; (((not (n1 == 10)) and (not false)) or (n2 != 100)); n1 := n1 + n2 do od
		%% The following is a syntactically incorrect application of for loops.
		% for for n1 := 0; n1 != n2; n1 := n1 + 1 do od; n1 != n2; n1 := n1 + 1 do od; %
		
end