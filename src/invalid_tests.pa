process PROCESS1 { 
	// Testing for guardedness.
    initial state A(0) := A(1) + 1 + a.0;
    
    // The variable would become negative.
    state A(n) := a.A(n - 2) in range(1, 3);
    
    // Invalid range, and redefinition of existing variable.
    state A(n) := a.A(n - 2) in range(3, 1);
    
    // Undeclared.
    state A(4) := a.D + C(n);
}

// The process already exists...
process PROCESS1 { 
    // Testing for guardedness.
    initial state A(0) := A(1) + 1 + a.0;
    
    // The variable would become negative.
    state A(n) := a.A(n - 2) in range(1, 3);
    
    // Invalid range, and redefinition of existing variable.
    state A(n) := a.A(n - 2) in range(3, 1);
    
    state A(4) := a.1;
}

process PROCESS2 {
	// Initial state is not allowed to be defined as a range.
    initial state A(n) := a.A(n) in natural;
    
    // The natural range would result in negative values.
    state B(n) := a.B(n-2) in natural;
    
    // Gap in range.
    state C(n) := a.1 in range(0, 2);
    state C(n) := a.1 in range(5, 10);
    state D(n) := a.C(n) in range(0, 10);
    
    // D(n) is not natural range, so incompatible.
    state E(n) := a.D(n) in natural;
    
}